axis.text = element_text(size=12))
geral = fls_dat %>%
ggplot(aes(mean_sev, mean_yld))+
geom_smooth(method="lm", fullrange= T, se=F, size=0.7, color="grey80", aes(group = factor(study)))+
ylab("Yield (kg/ha)")+
xlab("FLS Severity (%)")+
ylim(0,6000)+
xlim(0,100) +
theme_half_open()+
geom_abline(aes(intercept = 3719.91, slope = -19.08), size = 1.3, linetype = "solid") +
geom_abline(aes(intercept = 3395.91, slope = -23.96), size = 1.0, linetype = "dashed") +
geom_abline(aes(intercept = 4045.61, slope = -14.22), size = 1.0, linetype = "dashed")+
theme(axis.title = element_text(size=12),
axis.title.y = element_blank(),
axis.text = element_text(size=12))
geral
library(patchwork)
(lines_kg + geral)/(int + slope) +
plot_layout(nrow = 2)+
plot_annotation(tag_levels = "A")
ggsave("Figures/coefficients.png", height=10, width=10, dpi = 600, bg = "white")
high <- ggplot(fls_dat, aes(mean_sev, mean_yld)) +
geom_smooth(method="lm", fullrange= T, se=F, size=0.7, color="grey90", aes(group = factor(study)))+
ylim(0, 6000) +
xlim(0, 100) +
labs(title = "Baseline yield: High",
x = "FLS Severity (%)",
y = "Soybean yield (kg/ha)") +
theme_half_open() +
geom_abline(aes(intercept = 3842.69, slope = -16.20), size = 1.5, linetype = "solid") +
geom_abline(aes(intercept = 3557.12, slope = -21.45), size = 1.5, linetype = "dashed") +
geom_abline(aes(intercept = 4126.21, slope = -10.81), size = 1.5, linetype = "dashed")+
theme(axis.title = element_text(size=12),
axis.text = element_text(size=12),
plot.title = element_text(hjust = 0.5))
high
low <- ggplot(fls_dat, aes(mean_sev, mean_yld)) +
geom_smooth(method="lm", fullrange= T, se=F, size=0.7, color="grey90", aes(group = factor(study)))+
ylim(0, 6000) +
xlim(0, 100) +
labs(title = "Baseline yield: Low",
x = "FLS Severity (%)",
y = "Soybean yield (kg/ha)") +
theme_half_open() +
geom_abline(aes(intercept = 3455.11, slope = -14.38), size = 1.5, linetype = "solid") +
geom_abline(aes(intercept = 3060.12, slope = -23.29), size = 1.5, linetype = "dashed") +
geom_abline(aes(intercept = 3847.69, slope = -5.3), size = 1.5, linetype = "dashed")+
theme(axis.title = element_text(size=12),
axis.title.y = element_blank(),
axis.text = element_text(size=12),
plot.title = element_text(hjust = 0.5))
low
library(patchwork)
(high + low) +
plot_layout(nrow = 1)+
plot_annotation(tag_levels = "A")
ggsave("Figures/baseline_yld.png", height=4, width=8, dpi = 600, bg = "white")
cost = seq(30, 80,length.out = 200)
lambda = c(0.25, 0.50, 0.75)
soybean = seq(200, 700,length.out = 200)
a = 0.0051
economic = expand.grid(cost = cost,soybean = soybean, lambda = lambda, a = a) %>%
mutate(econ_tresh = ((cost/(soybean*a))*lambda)) %>%
mutate(lambda = paste0(lambda,"% of Control"))
surface = economic %>%
mutate(efficacy = case_when(lambda == "0.25% of Control" ~ "25% of Control",
lambda == "0.5% of Control" ~ "50% of Control",
lambda == "0.75% of Control" ~ "75% of Control")) %>%
ggplot(aes(cost, soybean, fill = econ_tresh))+
geom_raster(alpha = 0.85)+
scale_fill_viridis_b(option = "B",
guide = guide_colorbar(barwidth = 15, barheight = 0.3),
breaks = seq(0, 60, by =5)
)+
facet_grid(~efficacy)+
theme_minimal_grid()+
labs(y = "Soybean price (USD/metric ton)",
x = "Cost (USD/ha)",
fill ="Economic Damage Threshold (%)" )+
theme(legend.position = "top",
legend.justification = 0.5)
surface
ggsave("Figures/EDT.png", height=4, width=8, dpi = 600, bg = "white")
rmarkdown::render_site()
library(tidyverse)
library(metafor)
library(ggthemes)
library(cowplot)
library(scales)
library(knitr)
library(broom)
library(dplyr)
library(readxl)
library(gsheet)
library(janitor)
fls_raw <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1tCr1ZCfm9dpWqupwxRJzxFCiMeU5rAT2quTF1sqg_WE/edit?usp=sharing") %>%
group_by(study, brand_name) %>%
mutate(sev = as.numeric(sev),
yld = as.numeric(yld)) %>%
mutate(n = n()) #columm with the number of rep
# Tansforming soybean yield from bu/A to kg/ha
fls_raw <- fls_raw %>%
mutate(yld = yld*67.25)
fls_raw
fls1 <- fls_raw %>%
filter(study != 23) %>%
filter(study != 27) %>%
filter(study != 38) %>%
filter(study != 48) %>%
group_by(study, year, location, state, cultivar, planting_date, app_date, growth_stage, brand_name, group, active_ingred,n) %>%
summarise(mean_sev = mean(sev),
mean_yld = mean(yld))
fls2_sev <- fls_raw %>%
filter(study != 23) %>%
filter(study != 27) %>%
filter(study != 38) %>%
filter(study != 48) %>%
filter(sev>0) %>%
group_by(study, year) %>%
select(active_ingred, rep, sev) %>%
group_by(study, year) %>%
do(tidy(aov(.$sev ~ .$active_ingred + factor(.$rep)))) %>%
filter(term == "Residuals") %>%
select(1,2,6) %>%
set_names("study", "year", "v_sev")
fls2_yld <- fls_raw %>%
filter(study != 23) %>%
filter(study != 27) %>%
filter(study != 38) %>%
filter(study != 48) %>%
group_by(study, year) %>%
select(active_ingred, rep, yld) %>%
group_by(study, year) %>%
do(tidy(aov(.$yld ~ .$active_ingred + factor(.$rep)))) %>%
filter(term == "Residuals") %>%
select(1,2,6) %>%
set_names("study", "year", "v_yld")
qmr = left_join(fls2_sev, fls2_yld)
fls_trial = full_join(fls1, qmr)
fls_trial
fls23 = fls_raw %>%
filter(study == 23) %>%
group_by(study, year, location, state) %>%
summarise(mean_sev = mean(sev),
mean_yld = mean(yld)) %>%
mutate(v_sev = ((21.48/100)*mean_sev)^2,
v_yld = ((5.95/100)*mean_yld)^2)
fls23
fls27 = fls_raw %>%
filter(study == 27) %>%
group_by(study, year, location, state) %>%
summarise(mean_sev = mean(sev),
mean_yld = mean(yld)) %>%
mutate(v_sev = ((21.01/100)*mean_sev)^2,
v_yld = ((8.94/100)*mean_yld)^2)
fls27
fls38 = fls_raw %>%
filter(study == 38) %>%
group_by(study, year, location, state) %>%
summarise(mean_sev = mean(sev),
mean_yld = mean(yld)) %>%
mutate(v_sev = ((0/100)*mean_sev)^2,
v_yld = ((8.59/100)*mean_yld)^2)
fls38
fls48 = fls_raw %>%
filter(study == 48) %>%
group_by(study, year, location, state) %>%
summarise(mean_sev = mean(sev),
mean_yld = mean(yld)) %>%
mutate(v_sev = ((0/100)*mean_sev)^2,
v_yld = ((11/100)*mean_yld)^2)
fls48
fls3 = rbind(fls23, fls27, fls38, fls48) %>%
select(1:4,7:8)
fls_cv = fls_raw %>%
filter(study %in% c(23,27,38,48)) %>%
mutate(n = n*4) %>%
full_join(fls3) %>%
#select(-c(12,13,16)) %>%
mutate(mean_sev = sev, mean_yld = yld) %>%
select(-c(sev, yld))
fls_cv
fls = full_join(fls_trial, fls_cv)
fls
# these two columns will be used as moderator variables later
fls_check = fls %>%
ungroup() %>%
filter(brand_name == "check")  %>%
mutate(check = brand_name, sev_check = mean_sev, v_sev_check = v_sev, yld_check = mean_yld, v_yld_check = v_yld ) %>%
select(study, yld_check, v_yld_check, sev_check, v_sev_check)
fls_data = fls %>%
full_join(fls_check)
library(readr)
write_csv(fls_data, "fls_data.csv")
library(tidyverse)
library(metafor)
library(ggthemes)
library(cowplot)
library(scales)
library(knitr)
library(broom)
library(dplyr)
library(readxl)
library(gsheet)
library(janitor)
library(ggforce)
fls_dat <- read_csv("fls_data.csv") %>%
filter(mean_yld != "NA") %>%
filter(mean_sev != "NA") %>%
filter(study!= 60) %>%
group_by(study) %>%
mutate(difer = max(mean_sev) - min(mean_sev)) %>%
filter(difer>5) #selecting studies with more than 5% difference in disease severity across treatments
head(fls_dat)
length(unique(fls_dat$study))
summary(fls_dat$mean_yld)
fls_dat <- fls_dat %>%
mutate(yield_class = case_when(mean_yld <= 3352 ~ "Low",
mean_yld > 3352 ~ "High"))
a1 = fls_dat %>%
group_by(study, yield_class) %>%
summarise() %>%
tabyl(yield_class)
a1
summary(fls_dat$sev_check) # the median value of the FLS severity in the untreated plots was 34.57%
fls_dat <- fls_dat %>%
mutate(sev_class = case_when(sev_check <= 34.57 ~ "Low",
sev_check > 34.57 ~ "High"))
a2 = fls_dat %>%
group_by(study, sev_class) %>%
summarise() %>%
tabyl(sev_class)
a2
library(lme4)
# null model
mix_yld <- lmer(mean_yld ~ 1 + (1 | study), data = fls_dat, REML = F)
# random intercept and slopes
mix_yld1 <- lmer(mean_yld ~ mean_sev + (mean_sev | study), data = fls_dat, REML = F)
# random slopes
mix_yld2 <- lmer(mean_yld ~ mean_sev + (1 | mean_sev), data = fls_dat, REML = F)
# random intercepts
mix_yld3 <- lmer(mean_yld ~ mean_sev + (1 | study), data = fls_dat, REML = F)
AIC(mix_yld, mix_yld1, mix_yld2, mix_yld3)
summary(mix_yld1)
confint.merMod(mix_yld1, method = "Wald")
mix_yld5 <- lmer(mean_yld ~ mean_sev * sev_class + (mean_sev | study), data = fls_dat, REML = F)
AIC(mix_yld1, mix_yld5)
anova(mix_yld1, mix_yld5, test = "Chisq")
summary(mix_yld5)
confint(mix_yld5)
mix_yld8 <- lmer(mean_yld ~ mean_sev * yield_class + (mean_sev | study), data = fls_dat, REML = F)
AIC(mix_yld1, mix_yld8)
anova(mix_yld1, mix_yld8, test = "Chisq")
summary(mix_yld8)
library(emmeans)
library(multcomp)
cld(emmeans(mix_yld8, ~ mean_sev * yield_class))
blup <- coef(mix_yld1)$study
colnames(blup) <- c("Intercept", "Slope")
summary(blup)
# Intercept
dec90_i <- quantile(blup$Intercept, probs = c(.9))
dec10_i <- quantile(blup$Intercept, probs = c(.1))
dec90_i - dec10_i
# Slopes
dec90_s <- quantile(blup$Slope, probs = c(.9))
dec10_s <- quantile(blup$Slope, probs = c(.1))
dec90_s - dec10_s
cor_yld_sev <- fls_dat %>%
group_by(study) %>%
do(tidy(cor.test(.$mean_sev, .$mean_yld), method = "pearson"))
cor_yld_sev
summary(cor_yld_sev$estimate)
hist_pears <- ggplot(cor_yld_sev, aes(estimate)) +
geom_histogram(bin = 0.1, binwidth = 0.1, color = "black" , fill = "black",
alpha = 0.1) +
theme_half_open()+
theme(axis.title = element_text(size=12),
axis.text = element_text(size=12))+
labs(x = expression("Pearson's correlation coefficient" ~italic("r")),
y = "Frequency")
hist_pears
fls_dat2 = fls_dat %>%
group_by(study) %>%
filter(row_number() == 1)
fls_dat3 <- full_join(cor_yld_sev, fls_dat2, by = "study") %>%
mutate(n2 = parameter + 2)
yield_max <- fls_dat %>%
filter(mean_yld != "NA") %>%
group_by(study) %>%
summarize(max_yield = max(mean_yld))
# Grouping the yield max information in a new column
fls_dat3 <- left_join(fls_dat3, yield_max) %>%
mutate(yield_class = case_when(max_yield <= 3352 ~ "low",
max_yield > 3352 ~ "high")) %>%
mutate(sev_class = case_when(sev_check <= 34 ~ "low",
sev_check > 34 ~ "high"))
fls_dat3
library(metafor)
fls_dat4 <- escalc(measure = "ZCOR", ri = estimate, ni = n2, data = fls_dat3)
summary(fls_dat4$yi)
data.frame(fls_dat4)
hist_fisher <- ggplot(fls_dat4, aes(yi)) +
geom_histogram(bin = 0.1, binwidth = 0.2, color = "black" , fill = "black",
alpha = 0.1) +
theme_half_open()+
theme(axis.title = element_text(size=12),
axis.text = element_text(size=12))+
labs(x = expression("Fisher's transformation of"~ italic("r")~ "("~italic("Z" [r])~")"),
y = "Frequency")
hist_fisher
library(patchwork)
(hist_pears + hist_fisher) +
plot_layout(nrow = 1)+
plot_annotation(tag_levels = "A")
ggsave("Figures/Corr_coeff.png", height=3, width=8, dpi = 600, bg = "white")
fls_cor_yld <- rma.uni(yi, vi, method = "ML", data = fls_dat4)
summary(fls_cor_yld)
pred_fls <- predict(fls_cor_yld, transf = transf.ztor)
pred_fls
fls_cor_yld_sev2 <- rma.uni(yi, vi, mods = ~sev_class, method = "ML", data = fls_dat4)
fls_cor_yld_sev2
fls_cor_yld_yld2 <- rma.uni(yi, vi, mods = ~ yield_class, method = "ML", data = fls_dat4)
fls_cor_yld_yld2
library(tidyverse)
library(metafor)
library(ggthemes)
library(cowplot)
library(scales)
library(knitr)
library(broom)
library(dplyr)
library(readxl)
library(gsheet)
library(janitor)
library(ggforce)
fls_dat <- read_csv("fls_data.csv") %>%
filter(mean_yld != "NA") %>%
filter(mean_sev != "NA") %>%
filter(study!= 60) %>%
group_by(study) %>%
mutate(difer = max(mean_sev) - min(mean_sev)) %>%
filter(difer>5) #selecting studies with more than 5% difference in disease severity across treatments
head(fls_dat)
length(unique(fls_dat$study))
hist_sev <- ggplot(fls_dat, aes(mean_sev)) +
geom_histogram(bin = 1, binwidth = 4.2, color = "black" , fill = "black",
alpha = 0.1) +
geom_vline(xintercept = 19.46,
size = 1.2,
linetype = 2)+
scale_x_continuous(breaks = c(0, 25,50,75,100), limits = c(0, 100)) +
theme_half_open()+
theme(axis.title = element_text(size=12),
axis.text = element_text(size=12))+
labs(x = "FLS severity (%)", y = "Frequency")
hist_yld <- ggplot(fls_dat, aes(mean_yld)) +
geom_histogram(bin = 1, binwidth = 200, color = "black" , fill = "black",
alpha = 0.1) +
geom_vline(xintercept = 3327,
size = 1.2,
linetype = 2)+
scale_y_continuous(breaks = c(0,20,40,60), limits = c(0, 60)) +
theme_half_open()+
theme(axis.title = element_text(size=12),
axis.text = element_text(size=12))+
labs(x = "Yield (kg/ha)", y = "Frequency")
library(patchwork)
(hist_sev + hist_yld) +
plot_layout(nrow = 1)+
plot_annotation(tag_levels = "A")
ggsave("Figures/histograms.png", height=3, width=8, dpi = 600, bg = "white")
ggplot(fls_dat, aes(mean_sev, mean_yld))+
geom_point(shape = 1)+
stat_smooth(method = lm, fullrange=TRUE, se = F, col = "black")+
ylab("Yield (kg/ha)")+
xlab("FLS Severity (%)")+
ylim(0,6000)+
theme_half_open()+
theme(axis.title = element_text(size=12),
axis.text = element_text(size=12))+
facet_wrap(~ study, ncol = 5, scales = "fixed")
ggsave("Figures/grid_lines.png", height=12, width=12, dpi = 600, bg = "white")
lines_kg = ggplot(fls_dat, aes(mean_sev, mean_yld))+
geom_smooth(method="lm", fullrange= T, se=F, size=0.7, color="grey80", aes(group = factor(study)))+
# geom_point(alpha = 0.5, shape = 1)+
ylab("Yield (kg/ha)")+
xlab("FLS Severity (%)")+
ylim(0,6000)+
xlim(0,100)+
theme_half_open()+
theme(axis.title = element_text(size=12),
axis.text = element_text(size=12))
lines_kg
reg_dc = fls_dat %>%
group_by(study, year) %>%
summarise(intercept = lm(mean_yld~mean_sev)$coefficients[1],
slope = lm(mean_yld~mean_sev)$coefficients[2],
r2 = summary(lm(mean_yld~mean_sev))$r.squared,
sigma = summary(lm(mean_yld~mean_sev))$sigma) %>%
mutate(Dc = (slope/intercept)*100) %>%
filter(Dc<0.5)
reg_dc
summary(reg_dc$intercept)
summary(reg_dc$slope)
int = reg_dc %>%
ggplot(aes(intercept))+
geom_histogram(color = "black" , fill = "black",
alpha = 0.1, bins = 15) +
theme_half_open()+
labs(y = "Frequency", x = "Intercept")+
theme(axis.title = element_text(size=12),
axis.text = element_text(size=12))
slope = reg_dc %>%
ggplot(aes(slope))+
geom_histogram(color = "black" , fill = "black",
alpha = 0.1, bins = 15) +   theme_half_open()+
labs(y = "Frequency", x = "Slope")+
theme(axis.title = element_text(size=12),
axis.text = element_text(size=12))
geral = fls_dat %>%
ggplot(aes(mean_sev, mean_yld))+
geom_smooth(method="lm", fullrange= T, se=F, size=0.7, color="grey80", aes(group = factor(study)))+
ylab("Yield (kg/ha)")+
xlab("FLS Severity (%)")+
ylim(0,6000)+
xlim(0,100) +
theme_half_open()+
geom_abline(aes(intercept = 3719.91, slope = -19.08), size = 1.3, linetype = "solid") +
geom_abline(aes(intercept = 3395.91, slope = -23.96), size = 1.0, linetype = "dashed") +
geom_abline(aes(intercept = 4045.61, slope = -14.22), size = 1.0, linetype = "dashed")+
theme(axis.title = element_text(size=12),
axis.title.y = element_blank(),
axis.text = element_text(size=12))
geral
library(patchwork)
(lines_kg + geral)/(int + slope) +
plot_layout(nrow = 2)+
plot_annotation(tag_levels = "A")
ggsave("Figures/coefficients.png", height=10, width=10, dpi = 600, bg = "white")
high <- ggplot(fls_dat, aes(mean_sev, mean_yld)) +
geom_smooth(method="lm", fullrange= T, se=F, size=0.7, color="grey90", aes(group = factor(study)))+
ylim(0, 6000) +
xlim(0, 100) +
labs(title = "Baseline yield: High",
x = "FLS Severity (%)",
y = "Soybean yield (kg/ha)") +
theme_half_open() +
geom_abline(aes(intercept = 3842.69, slope = -16.20), size = 1.5, linetype = "solid") +
geom_abline(aes(intercept = 3557.12, slope = -21.45), size = 1.5, linetype = "dashed") +
geom_abline(aes(intercept = 4126.21, slope = -10.81), size = 1.5, linetype = "dashed")+
theme(axis.title = element_text(size=12),
axis.text = element_text(size=12),
plot.title = element_text(hjust = 0.5))
high
low <- ggplot(fls_dat, aes(mean_sev, mean_yld)) +
geom_smooth(method="lm", fullrange= T, se=F, size=0.7, color="grey90", aes(group = factor(study)))+
ylim(0, 6000) +
xlim(0, 100) +
labs(title = "Baseline yield: Low",
x = "FLS Severity (%)",
y = "Soybean yield (kg/ha)") +
theme_half_open() +
geom_abline(aes(intercept = 3455.11, slope = -14.38), size = 1.5, linetype = "solid") +
geom_abline(aes(intercept = 3060.12, slope = -23.29), size = 1.5, linetype = "dashed") +
geom_abline(aes(intercept = 3847.69, slope = -5.3), size = 1.5, linetype = "dashed")+
theme(axis.title = element_text(size=12),
axis.title.y = element_blank(),
axis.text = element_text(size=12),
plot.title = element_text(hjust = 0.5))
low
library(patchwork)
(high + low) +
plot_layout(nrow = 1)+
plot_annotation(tag_levels = "A")
ggsave("Figures/baseline_yld.png", height=4, width=8, dpi = 600, bg = "white")
cost = seq(30, 80,length.out = 200)
lambda = c(0.25, 0.50, 0.75)
soybean = seq(200, 700,length.out = 200)
a = 0.0051
economic = expand.grid(cost = cost,soybean = soybean, lambda = lambda, a = a) %>%
mutate(econ_tresh = ((cost/(soybean*a))*lambda)) %>%
mutate(lambda = paste0(lambda,"% of Control"))
surface = economic %>%
mutate(efficacy = case_when(lambda == "0.25% of Control" ~ "25% of Control",
lambda == "0.5% of Control" ~ "50% of Control",
lambda == "0.75% of Control" ~ "75% of Control")) %>%
ggplot(aes(cost, soybean, fill = econ_tresh))+
geom_raster(alpha = 0.85)+
scale_fill_viridis_b(option = "B",
guide = guide_colorbar(barwidth = 15, barheight = 0.3),
breaks = seq(0, 60, by =5)
)+
facet_grid(~efficacy)+
theme_minimal_grid()+
labs(y = "Soybean price (USD/metric ton)",
x = "Cost (USD/ha)",
fill ="Economic Damage Threshold (%)" )+
theme(legend.position = "top",
legend.justification = 0.5)
surface
ggsave("Figures/EDT.png", height=4, width=8, dpi = 600, bg = "white")
rmarkdown::render_site()
setwd("G:/.shortcut-targets-by-id/1RvZ5nFJ_3GIVOek3nePLAcrADj4rMXF6/Frogeye leaf spot uniform fungicide trial data/Barro_FLS_Dissertation/Barro_Chapter 2_Damage_Coefficient/Relationship-Sev-Yield")
setwd("G:/.shortcut-targets-by-id/1RvZ5nFJ_3GIVOek3nePLAcrADj4rMXF6/Frogeye leaf spot uniform fungicide trial data/Barro_FLS_Dissertation/Barro_Chapter 2_Damage_Coefficient/Relationship-Sev-Yield")
setwd("G:/.shortcut-targets-by-id/1RvZ5nFJ_3GIVOek3nePLAcrADj4rMXF6/Frogeye leaf spot uniform fungicide trial data/Barro_FLS_Dissertation/Barro_Chapter 2_Damage_Coefficient/Relationship-Sev-Yield")
setwd("G:/.shortcut-targets-by-id/1RvZ5nFJ_3GIVOek3nePLAcrADj4rMXF6/Frogeye leaf spot uniform fungicide trial data/Barro_FLS_Dissertation/Barro_Chapter 2_Damage_Coefficient/Relationship-Sev-Yield")
setwd("G:/.shortcut-targets-by-id/1RvZ5nFJ_3GIVOek3nePLAcrADj4rMXF6/Frogeye leaf spot uniform fungicide trial data/Barro_FLS_Dissertation/Barro_Chapter 2_Damage_Coefficient/Relationship-Sev-Yield")
rmarkdown::render_site()
detach("package:dplyr", unload = TRUE)
library(dplyr)
rmarkdown::render_site()
